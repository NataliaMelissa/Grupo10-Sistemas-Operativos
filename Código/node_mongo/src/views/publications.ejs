<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Lista de publicaciones</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <link rel="stylesheet" href="css/style.css">
    <!-- Agregamos FontAwesome para los iconos -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" integrity="sha512-/+EyC9YntA+nz9rP6bzwv4DEfwxQ2cFvB+H9vvGzvAbfF1p0/xxm6StGQhqMmkFIn+9qUcRKt8U9m92OLNf0ww==" crossorigin="anonymous" referrerpolicy="no-referrer" />
</head>
<body>
    <div class="container mt-5">
        <div class="row">
            <!-- Columna de la Lista de publications -->
            <div class="col-md-8">
                <a href="http://localhost:3000/" class="text-decoration-none">
                    <i class="fas fa-arrow-left me-2"></i> Volver
                </a>
                <h1>Lista de Publicaciones</h1>
                
                <!-- Lista de publications existentes -->
                <ul class="list-group">
                    <% for (let i = publications.length - 1; i >= 0; i--) { %>
                        <li class="list-group-item">
                            <p><strong>ID:</strong> <%= publications[i]._id %></p>
                            <p><strong>Descripcion:</strong> <%= publications[i].publication_description %></p>
                            <p><strong>Publicado por:</strong> <%= publications[i].username_publishing %></p>
                            <p><strong>Media:</strong> <%= publications[i].has_attachment %></p>
                            <!-- Otros detalles del Publications aquí -->
                        </li> 
                    <% } %>
                </ul>
            </div>

            <!-- Columna del Panel de Administración -->
            <div class="col-md-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Administración de Publicaciones</h5>

                        <!-- Botón para recargar la página -->
                        <button class="btn btn-info" onclick="recargarPagina()">Leer</button>
                        <!-- Spinner para mostrar durante la carga -->
                        <div class="spinner-border text-info d-none" role="status" id="loadingSpinner">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                        <script>
                            function recargarPagina() {
                                console.log('Inicio de recargarPagina');
                                // Mostrar el spinner
                                document.getElementById('loadingSpinner').classList.remove('d-none');
                                setTimeout(() => {
                                    location.reload();
                                    console.log('Página recargada');
                                    // Ocultar el spinner después de recargar
                                    document.getElementById('loadingSpinner').classList.add('d-none');
                                }, 700);
                            }
                        </script>

                        <!-- Formulario para Crear un Nuevo Publication -->
                        <button class="btn btn-success mb-2" data-bs-toggle="collapse" data-bs-target="#crearForm">Crear</button>
                        <div class="collapse" id="crearForm">
                            <form id="crearPublicationsForm" action="/publicationsPost" method="POST">
                                <!-- Campos del formulario según tus necesidades -->
                                <div class="mb-3">
                                    <label for="publication_description" class="form-label">Descripcion:</label>
                                    <textarea class="form-control" id="publication_description" name="publication_description" rows="3" required></textarea>
                                </div>
                                <div class="mb-3">
                                    <label for="username_publishing" class="form-label">Publicado por:</label>
                                    <input type="text" class="form-control" id="username_publishing" name="username_publishing" required>
                                </div>
                                <div class="mb-3">
                                    <label for="has_attachment">¿Adjuntar imagen?</label>
                                    <div class="form-check">
                                        <input type="radio" class="form-check-input" id="has_attachment_true" name="has_attachment" value="true" checked>
                                        <label class="form-check-label" for="has_attachment_true">Sí</label>
                                    </div>
                                    <div class="form-check">
                                        <input type="radio" class="form-check-input" id="has_attachment_false" name="has_attachment" value="false">
                                        <label class="form-check-label" for="has_attachment_false">No</label>
                                    </div>
                                </div>
                                <!-- Agregar otros campos según sea necesario -->

                                <button type="button" class ="btn btn-success mb-2" onclick="crearPublications()">Guardar</button>
                            </form>
                        </div>
                        <script>
                            function crearPublications() {
                                console.log('Inicio de crearPublications');

                                // Obtener valores del formulario
                                const publication_description = document.getElementById('publication_description').value;
                                const username_publishing = document.getElementById('username_publishing').value;
                                const has_attachment = document.querySelector('input[name="has_attachment"]:checked').value;
                                

                                // Validar los campos según tus necesidades
                                if (!publication_description || !username_publishing || !has_attachment_false || !has_attachment_true) {
                                    alert("Todos los campos son obligatorios");
                                    console.log('Fin de crearPublications - Campos incompletos');
                                    return;
                                }

                                // Configurar la acción del formulario según sea necesario
                                document.getElementById('crearPublicationsForm').action = '/publicationsPost';

                                // Enviar solicitud al servidor
                                fetch('/publicationsPost', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json',
                                    },
                                    body: JSON.stringify({ publication_description, username_publishing, has_attachment}),
                                })
                                .then(response => response.json())
                                .then(data => {
                                    console.log('Respuesta del servidor:', data);

                                    // Actualizar la interfaz o redirigir a otra página según tus necesidades
                                    setTimeout(() => {
                                        location.reload(); // Ejemplo: recargar la página después de crear un nuevo Publications
                                        console.log('Página recargada después de crear una nueva publicación');
                                    }, 1000);
                                })
                                .catch(error => {
                                    console.error('Error al enviar la solicitud POST:', error);
                                    alert('Error al crear la nueva publicación. Consulta la consola para más detalles.');
                                });

                                console.log('Fin de crearPublications');
                            }
                        </script>


                        <!-- Formulario para Actualizar un Publications -->
                        <button class="btn btn-warning mb-2" data-bs-toggle="collapse" data-bs-target="#editarForm">Actualizar</button>
                        <div class="collapse" id="editarForm">
                            <form id="editarPublicationsForm" method="PUT" action="">
                                <!-- Campo para el ID del Publications a Actualizar -->
                                <div class="mb-3">
                                    <label for="idActualizar" class="form-label">ID de la Publicación a Actualizar:</label>
                                    <input type="text" class="form-control" id="idActualizar" name="idActualizar" required>
                                </div>

                                <!-- Campos para la actualización del Publications (Estrellas, Producto, Comentario, Usuario, etc.) -->
                                <div class="mb-3">
                                    <label for="nuevaDescripcion" class="form-label">Nueva descripción de la publicación:</label>
                                    <input type="text" class="form-control" id="nuevaDescripcion" name="nuevaDescripcion" required>
                                </div>
                                <div class="mb-3">
                                    <label for="nuevoHasAttachment">Incluir/Eliminar imagen?</label>
                                    <div class="form-check">
                                        <input type="radio" class="form-check-input" id="nuevoHasAttachment_true" name="nuevoHasAttachment" value="true">
                                        <label class="form-check-label" for="nuevoHasAttachment_true">Sí</label>
                                    </div>
                                    <div class="form-check">
                                        <input type="radio" class="form-check-input" id="nuevoHasAttachment_false" name="nuevoHasAttachment" value="false">
                                        <label class="form-check-label" for="nuevoHasAttachment_false">No</label>
                                    </div>
                                </div>

                                <!-- Otros campos según sea necesario -->

                                <button type="button" class="btn btn-warning" onclick="confirmarActualizar()">Actualizar</button>
                            </form>
                        </div>
                        <script>
                            function confirmarActualizar() {
                                console.log('Inicio de confirmarActualizar');

                                // Obtener valores del formulario
                                const idActualizar = document.getElementById('idActualizar').value;
                                const nuevaDescripcion = document.getElementById('nuevaDescripcion').value;
                                const nuevoHasAttachment = document.querySelector('input[name="nuevoHasAttachment"]:checked').value;
                                // Puedes obtener otros valores según sea necesario, por ejemplo:
                                // const nuevoProducto = document.getElementById('nuevoProducto').value;
                                // const nuevoComentario = document.getElementById('nuevoComentario').value;
                                // const nuevoUsuario = document.getElementById('nuevoUsuario').value;

                                // Validar el ID según tus necesidades
                                if (!idActualizar || !nuevaDescripcion || !nuevoHasAttachment) {
                                    alert("Todos los campos son obligatorios");
                                    console.log('Fin de confirmarActualizar - ID no válido');
                                    return;
                                }

                                // Configurar la acción del formulario según sea necesario
                                document.getElementById('editarPublicationsForm').action = '/publicationsUpdate/' + idActualizar;

                                // Enviar solicitud al servidor
                                fetch('/publicationsUpdate/' + idActualizar, {
                                    method: 'PUT',
                                    headers: {
                                        'Content-Type': 'application/json',
                                    },
                                    body: JSON.stringify({
                                        publication_description: nuevaDescripcion,
                                        // Puedes incluir otros campos en el cuerpo según sea necesario
                                    }),
                                })
                                .then(response => response.json())
                                .then(data => {
                                    console.log('Respuesta del servidor:', data);

                                    // Actualizar la interfaz o redirigir a otra página según tus necesidades
                                    setTimeout(() => {
                                        location.reload(); // Ejemplo: recargar la página después de actualizar una publicacion
                                        console.log('Página recargada después de actualizar una publicación');
                                    }, 1000);
                                })
                                .catch(error => {
                                    console.error('Error al enviar la solicitud PUT:', error);
                                    alert('Error al actualizar el Publications. Consulta la consola para más detalles.');
                                });

                                console.log('Fin de confirmarActualizar');
                            }
                        </script>

                        </script>

                        <!-- Formulario para Eliminar un Publications por ID -->
                        <button class="btn btn-danger mb-2" data-bs-toggle="collapse" data-bs-target="#eliminarForm">Eliminar</button>
                        <div class="collapse" id="eliminarForm">
                            <form id="eliminarPublicationsForm" method="DELETE" action="">
                                <!-- Campo para el ID de la publicacion a Eliminar -->
                                <div class="mb-3">
                                    <label for="idEliminar" class="form-label">ID de la publicacion a Eliminar:</label>
                                    <input type="text" class="form-control" id="idEliminar" name="idEliminar" required>
                                </div>

                                <!-- Agregar otros campos según sea necesario -->

                                <button type="button" class="btn btn-danger" onclick="confirmarEliminar()">Eliminar</button>
                            </form>
                        </div>
                        <script>
                            function confirmarEliminar() {
                                console.log('Inicio de confirmarEliminar');

                                // Obtener el ID del Publications a eliminar
                                const idEliminar = document.getElementById('idEliminar').value;

                                // Validar el ID según tus necesidades
                                if (!idEliminar) {
                                    alert("ID no válido");
                                    console.log('Fin de confirmarEliminar - ID no válido');
                                    return;
                                }

                                // Configurar la acción del formulario según sea necesario
                                document.getElementById('eliminarPublicationsForm').action = '/publicationsDelete/' + idEliminar;

                                // Mostrar un mensaje de confirmación o utilizar otro método para confirmar la eliminación
                                const confirmacion = confirm("¿Estás seguro de que deseas eliminar este Publications?");
                                if (confirmacion) {
                                    // Enviar solicitud al servidor
                                    fetch('/publicationsDelete/' + idEliminar, {
                                        method: 'DELETE',
                                        headers: {
                                            'Content-Type': 'application/json',
                                        },
                                    })
                                    .then(response => response.json())
                                    .then(data => {
                                        console.log('Respuesta del servidor:', data);

                                        // Actualizar la interfaz o redirigir a otra página según tus necesidades
                                        setTimeout(() => {
                                            location.reload(); // Ejemplo: recargar la página después de eliminar un Publications
                                            console.log('Página recargada después de eliminar un Publications');
                                        }, 1000);
                                    })
                                    .catch(error => {
                                        console.error('Error al enviar la solicitud DELETE:', error);
                                        alert('Error al eliminar el Publications. Consulta la consola para más detalles.');
                                    });
                                }

                                console.log('Fin de confirmarEliminar');
                            }
                        </script>

                    </div>
                </div>
            </div>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
</body>
</html>
